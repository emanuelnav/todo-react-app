{"version":3,"sources":["js/ToDoContext.js","js/useLocalStorage.js","components/CreateToDoButton.js","components/ToDoCounter.js","components/ToDoItem.js","components/ToDoList.js","components/ToDoSearch.js","components/Modal.js","components/ToDoForm.js","components/Footer.js","App.js","index.js"],"names":["ToDoContext","React","createContext","ToDoProvider","props","_React$useState","useState","_React$useState2","Object","slicedToArray","searchValue","setSearchValue","_React$useState3","_React$useState4","openModal","setOpenModal","_useLocalStorage","itemName","parsedItems","localStoreItems","localStorage","getItem","JSON","parse","setItem","stringify","itemsList","setItemsList","useLocalStorage","_useLocalStorage2","tasksList","saveTasksList","completedTasks","filter","task","completed","length","totalTasks","tasksFiltered","taskName","name","toLowerCase","trim","includes","react_default","a","createElement","Provider","value","toggleCompleteTask","taskIndex","findIndex","newTaskList","toConsumableArray","deleteTask","addTask","push","children","CreateToDoButton","useContext","className","onClick","ToDoCounter","_React$useContext","ToDoItem","type","concat","onComplete","title","onDelete","ToDoList","ToDoSearch","placeholder","onChange","event","target","Modal","_ref","ReactDOM","createPortal","document","getElementById","ToDoForm","nameValue","setNameValue","onSubmit","preventDefault","required","class","Footer","href","App","Fragment","ToDoCounter_ToDoCounter","ToDoSearch_ToDoSearch","ToDoList_ToDoList","map","ToDoItem_ToDoItem","key","Modal_Modal","ToDoForm_ToDoForm","CreateToDoButton_CreateToDoButton","Footer_Footer","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.6c87b258.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst ToDoContext = React.createContext();\n\nfunction ToDoProvider(props) {\n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n    const [tasksList, saveTasksList] = useLocalStorage('TASKSLIST_V1');\n    const completedTasks = tasksList.filter(task => task.completed).length;\n    const totalTasks = tasksList.length;\n\n    let tasksFiltered = [];\n\n    if (!searchValue.length > 0) {\n        tasksFiltered = tasksList;\n    } else {\n        tasksFiltered = tasksList.filter(task => {\n        const taskName = task.name.toLowerCase();\n        const filter = searchValue.toLowerCase().trim();\n        return taskName.includes(filter);\n        });\n    }\n\n    const toggleCompleteTask = (name) => {\n        const taskIndex = tasksList.findIndex(task => task.name === name);\n        const newTaskList = [...tasksList];\n        newTaskList[taskIndex].completed = !newTaskList[taskIndex].completed;\n        saveTasksList(newTaskList);\n    };\n\n    const addTask = (name) => {\n        const newTaskList = [...tasksList]\n        newTaskList.push({\n            name: name,\n            completed: false,\n        });\n        saveTasksList(newTaskList);\n    };\n\n    const deleteTask = (name) => {\n        const newTaskList = tasksList.filter(task => task.name !== name)\n        saveTasksList(newTaskList);\n    };\n\n    return (\n        <ToDoContext.Provider value={{\n            searchValue,\n            setSearchValue,\n            openModal,\n            setOpenModal,\n            tasksList,\n            saveTasksList,\n            completedTasks,\n            totalTasks,\n            tasksFiltered,\n            toggleCompleteTask,\n            deleteTask,\n            addTask\n        }}>\n            {props.children}\n        </ToDoContext.Provider>\n    )\n}\n\nexport { ToDoContext, ToDoProvider };","import React from 'react';\n\nfunction useLocalStorage(itemName) {\n    const localStoreItems = localStorage.getItem(itemName);\n    let parsedItems;\n    if (!localStoreItems) {\n      localStorage.setItem(itemName, JSON.stringify([]))\n      parsedItems = [];\n    } else {\n      parsedItems = JSON.parse(localStoreItems);\n    }\n\n    const [itemsList, setItemsList] = React.useState(parsedItems);\n\n    const saveItemsList = (itemsList) => {\n      localStorage.setItem(itemName, JSON.stringify(itemsList))\n      setItemsList(itemsList)\n    };\n\n    return [itemsList, saveItemsList];\n\n};\n\nexport { useLocalStorage };","import React from 'react'\nimport '../css/CreateToDoButton.css'\nimport { ToDoContext } from '../js/ToDoContext';\n\nfunction CreateToDoButton() {\n    const {setOpenModal} = React.useContext(ToDoContext);\n\n    const openModal = () => {\n        setOpenModal(true);\n    }\n    return (\n        <button className=\"createTodoButton\"\n                onClick={openModal}>\n            <i className=\"bi bi-plus-lg\"></i>\n        </button>\n    );\n}\n\nexport { CreateToDoButton };","import React from 'react'\nimport '../css/ToDoCounter.css'\nimport { ToDoContext } from '../js/ToDoContext';\n\nfunction ToDoCounter() {\n    const {completedTasks, totalTasks} = React.useContext(ToDoContext);\n    return (\n        <h2 className=\"todoCounter\">You completed {completedTasks}/{totalTasks} tasks</h2>\n    );\n}\n\nexport { ToDoCounter };","import React from 'react';\nimport '../css/ToDoItem.css';\n\nfunction ToDoItem(props) {\n    return (\n      <li className=\"todoItem\">\n        <button type=\"button\"\n                className={`icon ${props.completed && 'icon-check--active'}`}\n                onClick={props.onComplete}>\n          <i className={`bi ${props.completed ? 'bi-check-square' : 'bi-square'}`}></i>\n        </button>\n\n        <p className={`todoItem-p ${props.completed && 'todoItem-p--complete'}`}>\n          {props.title}\n        </p>\n\n      <span\n        className=\"icon icon-delete\"\n        onClick={props.onDelete}>\n        <i className=\"bi bi-trash3\"></i>\n      </span>\n    </li>\n    );\n}\n\nexport { ToDoItem };","import React from 'react';\nimport '../css/ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <section>\n            <ul>\n                { props.children }\n            </ul>\n        </section>\n    );\n}\n\nexport { ToDoList };","import React from 'react';\nimport '../css/ToDoSearch.css';\nimport { ToDoContext } from '../js/ToDoContext';\n\nfunction ToDoSearch() {\n    const {searchValue, setSearchValue} = React.useContext(ToDoContext);\n\n    const onSearchValueChange = event => {\n        setSearchValue(event.target.value);\n    }\n\n    return (\n        <input className=\"todoSearch\"\n               placeholder=\"Search a task\"\n               value={searchValue}\n               onChange={onSearchValueChange}/>\n    );\n}\n\nexport { ToDoSearch };","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport '../css/Modal.css';\n\nfunction Modal({ children }) {\n    return (\n        ReactDOM.createPortal(\n            <div className=\"modalBackground\">\n                {children}\n            </div>,\n            document.getElementById('modal')\n        )\n    );\n}\n\nexport { Modal };","import React from 'react';\nimport '../css/ToDoForm.css';\nimport { ToDoContext } from '../js/ToDoContext';\n\nfunction ToDoForm() {\n    const [nameValue, setNameValue] = React.useState('');\n    const {setOpenModal, addTask} = React.useContext(ToDoContext);\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTask(nameValue);\n        setOpenModal(false)\n    };\n\n    const onChange = (event) => {\n        setNameValue(event.target.value);\n    };\n\n    return (\n        <form onSubmit={onSubmit} >\n            <label>Add a new task</label>\n\n            <textarea\n            value = {nameValue}\n            onChange = {onChange}\n            placeholder = \"Insert a new task...\"\n            required/>\n\n            <div className=\"todoForm-buttonContainer\">\n                <button\n                    type=\"button\"\n                    className=\"todoForm-button todoForm-button-cancel\"\n                    onClick = {onCancel}\n                >\n                    <i class=\"bi bi-x-lg\"></i>\n                </button>\n\n                <button\n                    className=\"todoForm-button todoForm-button-add\"\n                    type= \"submit\"\n                >\n                    <i class=\"bi bi-plus-lg\"></i>\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { ToDoForm };","import React from 'react';\nimport '../css/Footer.css';\n\nfunction Footer() {\n    return (\n        <footer>\n            <span>\n                Made by EN <i class=\"bi bi-laptop\"></i>\n            </span>\n            <span> | <a href=\"https://github.com/emanuelnav/todo-react-app\" target={\"_blank\"}>Source Code <i class=\"bi bi-code-slash\"></i></a></span>\n        </footer>\n    );\n}\n\nexport { Footer };","import React from 'react'\nimport { CreateToDoButton } from './components/CreateToDoButton';\nimport { ToDoCounter } from './components/ToDoCounter';\nimport { ToDoItem } from './components/ToDoItem';\nimport { ToDoList } from './components/ToDoList';\nimport { ToDoSearch } from './components/ToDoSearch';\nimport { Modal } from './components/Modal';\nimport { ToDoForm } from './components/ToDoForm';\nimport { Footer } from './components/Footer';\nimport { ToDoContext } from './js/ToDoContext';\n\nfunction App() {\n  const {\n    tasksFiltered,\n    toggleCompleteTask,\n    deleteTask,\n    openModal,\n  } = React.useContext(ToDoContext);\n\n  return (\n    <React.Fragment>\n      <ToDoCounter/>\n      <ToDoSearch/>\n        <ToDoList>\n          { tasksFiltered.map(task =>\n            <ToDoItem key={task.name}\n                      title={task.name}\n                      completed={task.completed}\n                      onComplete={() => toggleCompleteTask(task.name)}\n                      onDelete={() => deleteTask(task.name)}/>\n          )}\n        </ToDoList>\n\n      {openModal && (\n        <Modal>\n          <ToDoForm/>\n        </Modal>\n      )}\n      <CreateToDoButton/>\n      <Footer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\"\nimport App from './App';\nimport { ToDoProvider } from './js/ToDoContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ToDoProvider>\n    <App />\n  </ToDoProvider>\n);\n"],"sourceRoot":""}